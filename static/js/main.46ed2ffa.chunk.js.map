{"version":3,"sources":["components/Loader.js","components/contants.js","pages/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","type","className","MESSAGE","Homepage","useState","urls","setUrls","loading","setLoading","copiedTxt","setCopiedTxt","copyMessage","setCopyMessage","errorMsg","setErrorMsg","shortenerRef","useRef","shortenUrl","_","current","value","axios","get","then","res","data","console","log","catch","err","copyHandler","text","setTimeout","placeholder","ref","onKeyUp","e","key","blur","onClick","ok","result","short_link","onCopy","short_link2","short_link3","full_short_link","full_short_link2","full_short_link3","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46ed2ffa.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Loader({type}) {\n    return (\n        <>\n            {type === 'dots' ? (\n                <div className=\"loading-dot-pulse\">\n                    <div className=\"dot-pulse\"></div>\n                </div>\n            ) : (\n                <div className=\"loader\"></div>\n            )}\n        </>\n    )\n}\n","export const BASE_API = 'https://api.shrtco.de/v2/shorten?url='\n\nexport const MESSAGE = {\n    error: 'Your link might be invalid or was interrupted. Try again?',\n    copied: 'Copied!'\n}","import React, { useState, useRef } from 'react'\nimport axios from 'axios'\nimport Loader from '../components/Loader'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport { BASE_API, MESSAGE } from '../components/contants'\n\nexport default function Homepage() {\n    const [urls, setUrls] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [copiedTxt, setCopiedTxt] = useState('')\n    const [copyMessage, setCopyMessage] = useState('')\n    const [errorMsg, setErrorMsg] = useState('')\n    const shortenerRef = useRef()\n\n    const shortenUrl = _ => {\n        if(shortenerRef.current.value){\n            setLoading(true)\n            setErrorMsg('')\n\n            axios.get(BASE_API + shortenerRef.current.value)\n            .then(res => {\n                setUrls(res.data)\n                console.log(res.data)\n                setLoading(false)\n                setErrorMsg('')\n            })\n            .catch(err => {\n                console.log(err)\n                setLoading(false)\n                setErrorMsg(MESSAGE.error)\n                setUrls({})\n            })\n        }\n    }\n\n    const copyHandler = text => {\n        setCopiedTxt(text)\n        setCopyMessage(MESSAGE.copied)\n        setTimeout(() => {\n            setCopyMessage('')\n        }, 1000)\n    }\n\n    const onEnterHandler = e => {\n        if (e.key === 'Enter') {\n            shortenUrl()\n            shortenerRef.current.blur()\n        }\n    }\n\n    return (\n        <div className=\"wrap\">\n            \n            <div className=\"shortener-con flex\">\n                <div className=\"shortener-head\">\n                    <h1>Short URL Generator</h1>\n                </div>\n                \n                <div className=\"shortener-input-field\">\n                    <input type=\"text\" className=\"shortener-input placeholder\" placeholder=\"Paste link here...\" ref={shortenerRef} onKeyUp={onEnterHandler}/>\n                    \n                    {loading ? (\n                        <Loader/>\n                    ) : (\n                        <button className=\"shortener-btn\" onClick={shortenUrl}>\n                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                        </button>\n                    )}\n                </div>\n\n                {loading ? (\n                    <div className=\"shortener-progress\">\n                        <div className=\"shortener-progress-note\">Generating short links</div>\n                        <Loader type='dots'/>\n                    </div>\n                ) : ''}\n\n                <div className=\"shortener-error error text-center\">{errorMsg || ''}</div>\n\n                <div className={'shortener-result' + (!loading && urls.ok ? ' show' : '')}>\n\n                    {!loading && urls.ok ? (\n                        <div className=\"short-links\">\n                            <ul>\n                                <li>\n                                    <span className=\"short-link-label\">Short Link 1: </span>\n                                    <span className=\"short-link-text\">\n                                        <span className={'short-link' + (copiedTxt === urls.result.short_link ? ' highlight' : '')}>{urls.result.short_link}</span>\n                                        {copyMessage && copiedTxt === urls.result.short_link ? (\n                                            <span className=\"short-link-copy-msg\">{copyMessage}</span>\n                                        ) : (\n                                            <CopyToClipboard\n                                                text={urls.result.short_link}\n                                                onCopy={() => copyHandler(urls.result.short_link)}>\n                                                <i className=\"short-link-copy fa fa-clipboard\" aria-hidden=\"true\"></i>\n                                            </CopyToClipboard>\n                                        )}\n                                    </span>\n                                </li>\n                                <li>\n                                    <span className=\"short-link-label\">Short Link 2: </span>\n                                    <span className=\"short-link-text\">\n                                        <span className={'short-link' + (copiedTxt === urls.result.short_link2 ? ' highlight' : '')}>{urls.result.short_link2}</span>\n                                        {copyMessage && copiedTxt === urls.result.short_link2 ? (\n                                            <span className=\"short-link-copy-msg\">{copyMessage}</span>\n                                        ) : (\n                                            <CopyToClipboard\n                                                text={urls.result.short_link2}\n                                                onCopy={() => copyHandler(urls.result.short_link2)}>\n                                                <i className=\"short-link-copy fa fa-clipboard\" aria-hidden=\"true\"></i>\n                                            </CopyToClipboard>\n                                        )}\n                                    </span>\n                                </li>\n                                <li>\n                                    <span className=\"short-link-label\">Short Link 3: </span>\n                                    <span className=\"short-link-text\">\n                                        <span className={'short-link' + (copiedTxt === urls.result.short_link3 ? ' highlight' : '')}>{urls.result.short_link3}</span>\n                                        {copyMessage && copiedTxt === urls.result.short_link3 ? (\n                                            <span className=\"short-link-copy-msg\">{copyMessage}</span>\n                                        ) : (\n                                            <CopyToClipboard\n                                                text={urls.result.short_link3}\n                                                onCopy={() => copyHandler(urls.result.short_link3)}>\n                                                <i className=\"short-link-copy fa fa-clipboard\" aria-hidden=\"true\"></i>\n                                            </CopyToClipboard>\n                                        )}\n                                    </span>\n                                </li>\n                                <li>\n                                    <span className=\"short-link-label\">Full Short Link 1: </span>\n                                    <span className=\"short-link-text\">\n                                        <span className={'short-link' + (copiedTxt === urls.result.full_short_link ? ' highlight' : '')}>{urls.result.full_short_link}</span>\n                                        {copyMessage && copiedTxt === urls.result.full_short_link ? (\n                                            <span className=\"short-link-copy-msg\">{copyMessage}</span>\n                                        ) : (\n                                            <CopyToClipboard\n                                                text={urls.result.full_short_link}\n                                                onCopy={() => copyHandler(urls.result.full_short_link)}>\n                                                <i className=\"short-link-copy fa fa-clipboard\" aria-hidden=\"true\"></i>\n                                            </CopyToClipboard>\n                                        )}\n                                    </span>\n                                </li>\n                                <li>\n                                    <span className=\"short-link-label\">Full Short Link 2: </span>\n                                    <span className=\"short-link-text\">\n                                        <span className={'short-link' + (copiedTxt === urls.result.full_short_link2 ? ' highlight' : '')}>{urls.result.full_short_link2}</span>\n                                        {copyMessage && copiedTxt === urls.result.full_short_link2 ? (\n                                            <span className=\"short-link-copy-msg\">{copyMessage}</span>\n                                        ) : (\n                                            <CopyToClipboard\n                                                text={urls.result.full_short_link2}\n                                                onCopy={() => copyHandler(urls.result.full_short_link2)}>\n                                                <i className=\"short-link-copy fa fa-clipboard\" aria-hidden=\"true\"></i>\n                                            </CopyToClipboard>\n                                        )}\n                                    </span>\n                                </li>\n                                <li>\n                                    <span className=\"short-link-label\">Full Short Link 3: </span>\n                                    <span className=\"short-link-text\">\n                                        <span className={'short-link' + (copiedTxt === urls.result.full_short_link3 ? ' highlight' : '')}>{urls.result.full_short_link3}</span>\n                                        \n                                        {copyMessage && copiedTxt === urls.result.full_short_link3 ? (\n                                            <span className=\"short-link-copy-msg\">{copyMessage}</span>\n                                        ) : (\n                                            <CopyToClipboard\n                                                text={urls.result.full_short_link3}\n                                                onCopy={() => copyHandler(urls.result.full_short_link3)}>\n                                                <i className=\"short-link-copy fa fa-clipboard\" aria-hidden=\"true\"></i>\n                                            </CopyToClipboard>\n                                        )}\n                                    </span>\n                                </li>\n                                \n                            </ul>\n                        </div>\n                    ) : ''}\n                    \n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import './App.css';\nimport Homepage from './pages/Homepage'\n\nfunction App() {\n  return (\n    <div className=\"app theme-2\">\n     <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}